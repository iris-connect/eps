name: $OP
vars:
  OP:
    source: literal
    value: hd-1
    type: string
directory:
  type: json
  settings:
    path: "$DIR/directory"
channels: # defines all the channels that we want to open when starting the server
  - name: Stdout channel
    type: stdout
    settings: {}
  - name: test gRPC server # accepts incoming gRPC connections to deliver and receive messages
    type: grpc_server
    settings:
      bind_address: "localhost:5557"
      tls:
        ca_certificate_files: ["$DIR/certs/root.crt"]
        certificate_file: "$DIR/certs/$OP.crt"
        key_file: "$DIR/certs/$OP.key"
  - name: test gRPC client # creates outgoing gRPC connections to deliver and receive messages
    type: grpc_client
    settings:
      tls:
        ca_certificate_files: ["$DIR/certs/root.crt"]
        certificate_file: "$DIR/certs/$OP.crt"
        key_file: "$DIR/certs/$OP.key"
  - name: main JSON-RPC server # accepts incoming JSONRPC connections to deliver and receive messages
    type: jsonrpc_server 
    settings:
      bind_address: "localhost:5556"
      cors:
        allowed_hosts: ["^http(?:s)?://localhost\\:\\d+$"]
      tls:
        ca_certificate_files: ["$DIR/certs/root.crt"]
        certificate_file: "$DIR/certs/$OP.crt"
        key_file: "$DIR/certs/$OP.key"
  - name: main JSON-RPC client # creates outgoing JSONRPC connections to deliver and receive messages
    type: jsonrpc_client
    settings:
      endpoint: http://localhost:5555/jsonrpc
